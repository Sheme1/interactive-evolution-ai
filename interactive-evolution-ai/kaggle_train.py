"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±—É—á–µ–Ω–∏—è –Ω–∞ Kaggle/Colab.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è:
- –û—Ç–∫–ª—é—á–∞–µ—Ç –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é
- –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ workers –ø–æ–¥ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —è–¥—Ä–∞
- –°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –¥–æ—Å—Ç—É–ø–Ω–æ–µ –º–µ—Å—Ç–æ
"""
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
sys.path.insert(0, str(Path(__file__).parent))

from app.app_manager import AppManager
from app.utils.settings import Settings

def setup_for_cloud():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è."""
    print("=" * 60)
    print("üöÄ –ù–ê–°–¢–†–û–ô–ö–ê –û–ë–õ–ê–ß–ù–û–ì–û –û–ë–£–ß–ï–ù–ò–Ø")
    print("=" * 60)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–¥–µ—Ä
    cpu_count = os.cpu_count() or 1
    print(f"üìä –î–æ—Å—Ç—É–ø–Ω–æ CPU —è–¥–µ—Ä: {cpu_count}")

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º workers (–æ—Å—Ç–∞–≤–ª—è–µ–º 1 —è–¥—Ä–æ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã)
    recommended_workers = max(1, cpu_count - 1)
    print(f"‚öôÔ∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ workers: {recommended_workers}")

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    config_path = Path(__file__).parent / "config" / "settings.ini"
    settings = Settings(config_path)

    # –û–±–Ω–æ–≤–ª—è–µ–º workers
    current_workers = settings.get_int("Simulation", "workers")
    if current_workers != recommended_workers:
        settings.set_int("Simulation", "workers", recommended_workers)
        print(f"‚úÖ Workers –æ–±–Ω–æ–≤–ª–µ–Ω—ã: {current_workers} ‚Üí {recommended_workers}")
    else:
        print(f"‚úÖ Workers —É–∂–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã: {recommended_workers}")

    # –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print("\nüìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—É—á–µ–Ω–∏—è:")
    print(f"   - –ü–æ–ø—É–ª—è—Ü–∏—è: {settings.get_int('Simulation', 'population_size')}")
    print(f"   - –ü–æ–∫–æ–ª–µ–Ω–∏—è: {settings.get_int('Simulation', 'generations')}")
    print(f"   - –ï–¥–∞: {settings.get_int('Simulation', 'food_quantity')}")
    print(f"   - –†–µ—Å–ø–∞–≤–Ω –µ–¥—ã: {settings.get_bool('Simulation', 'food_respawn')}")
    print(f"   - –ú–∞—Ç—á–µ–π –Ω–∞ –≥–µ–Ω–æ–º: {settings.get_int('Simulation', 'matches_per_genome')}")
    print(f"   - Workers: {recommended_workers}")
    print("=" * 60)
    print()

    return settings

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–ª–∞—á–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è."""
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    settings = setup_for_cloud()

    # –°–æ–∑–¥–∞—ë–º AppManager –ë–ï–ó –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏
    print("üéØ –ó–∞–ø—É—Å–∫ –æ–±—É—á–µ–Ω–∏—è (–±–µ–∑ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏)...\n")
    app = AppManager(visualize=False)

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º —ç–≤–æ–ª—é—Ü–∏—é
        app.run_evolution()
        print("\n‚úÖ –û–±—É—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è  –û–±—É—á–µ–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏: {e}")
        raise

if __name__ == "__main__":
    main()
